name: Deploy to dev server

on:
  workflow_run:
    workflows: ["Django tests"]
    types:
      - completed
    branches:
      - dev
  workflow_dispatch: {}  # For local testing with act

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: deployment
    concurrency:
      group: deploy-dev
      cancel-in-progress: true

    steps:
      - name: Clone Infrastructure Repository
        run: git clone https://github.com/usegalaxy-au/infrastructure.git infrastructure

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible packaging

      - name: Install ssh keys
        # For reference: https://stackoverflow.com/a/70447517
        run: |
          install -m 600 -D /dev/null ~/.ssh/galaxy
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/galaxy

      - name: Add VAULT password
        run: |
          echo "${{ secrets.ANSIBLE_VAULT_PASS_BASE64 }}" | base64 --decode > .vault_pass.txt
        working-directory: infrastructure

      - name: DEBUG write vault pass to remote host
        run: >
          cat .vault_pass.txt
          | ssh
          -i ~/.ssh/galaxy
          -o StrictHostKeyChecking=no
          -o UserKnownHostsFile=/dev/null
          ${{ secrets.SSH_USER }}@site.usegalaxy.org.au
          'cat > ~/vault_pass.txt'
        working-directory: infrastructure

      - name: DEBUG char count vault pass
        run: wc -c .vault_pass.txt
        working-directory: infrastructure

      - name: Install ansible roles
        run: |
          ansible-galaxy install -p roles -r requirements.yml
        working-directory: infrastructure

      - name: Run Ansible Playbook
        run: >
          ansible-playbook
          -i hosts
          --tags update
          --key-file ~/.ssh/galaxy
          --vault-password-file .vault_pass.txt
          galaxy-media_dev_playbook.yml
        working-directory: infrastructure
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'False'
          ANSIBLE_REMOTE_USER: ${{ secrets.SSH_USER }}
